type User @key(fields: "id") {
  id: ID!
  username: String!
}

type Query {
  user(id: ID!): User!
}

type Mutation {
  createUser(input: CreateUserInput!): CreateUserPayload!
}

input CreateUserInput {
  username: String!
}

type CreateUserPayload {
  user: User
  errors: [CreateUsageError!]
}

union CreateUsageError = EmptyUsername | InvalidUsername | UsernameTaken

interface UsageError {
  message: String!
}

type EmptyUsername implements UsageError {
  message: String!
}

type InvalidUsername implements UsageError {
  message: String!
  username: String!
}

type UsernameTaken implements UsageError {
  message: String!
  username: String!
}
